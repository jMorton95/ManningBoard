// <auto-generated />
using System;
using Manning.Api.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Manning.Api.Migrations
{
    [DbContext(typeof(ManningDbContext))]
    [Migration("20230718212857_FixFKDependency")]
    partial class FixFKDependency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Manning.Api.Models.AssignedOperatorsModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("OperatorID")
                        .HasColumnType("integer");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OperatorID");

                    b.HasIndex("StationID");

                    b.ToTable("AssignedOperatorsModels");
                });

            modelBuilder.Entity("Manning.Api.Models.AvatarModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("bytea");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<int?>("OperatorID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("AvatarModels");
                });

            modelBuilder.Entity("Manning.Api.Models.ClockModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("ClockCardNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClockInTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ClockOutTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID");

                    b.ToTable("ClockModel");
                });

            modelBuilder.Entity("Manning.Api.Models.Operator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("ClockCardNumber")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("boolean");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID");

                    b.ToTable("Operator");
                });

            modelBuilder.Entity("Manning.Api.Models.OperatorCompletedTraining", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("OperatorID")
                        .HasColumnType("integer");

                    b.Property<int>("TrainerClockCardNumber")
                        .HasColumnType("integer");

                    b.Property<int>("TrainingRequirementID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("OperatorCompletedTraining");
                });

            modelBuilder.Entity("Manning.Api.Models.Station", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ZoneID");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("Manning.Api.Models.StationStateModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsTrainee")
                        .HasColumnType("boolean");

                    b.Property<int>("OperatorID")
                        .HasColumnType("integer");

                    b.Property<int>("StationID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("StationStateModel");
                });

            modelBuilder.Entity("Manning.Api.Models.TrainingRequirement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("RequirementDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("StationID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("StationID");

                    b.ToTable("TrainingRequirement");
                });

            modelBuilder.Entity("Manning.Api.Models.WorkingDayHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsTrainee")
                        .HasColumnType("boolean");

                    b.Property<int>("OperatorID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StationID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("WorkdayHistory");
                });

            modelBuilder.Entity("Manning.Api.Models.Zone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("Manning.Api.Models.AssignedOperatorsModel", b =>
                {
                    b.HasOne("Manning.Api.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorID");

                    b.HasOne("Manning.Api.Models.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationID");

                    b.Navigation("Operator");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Manning.Api.Models.Station", b =>
                {
                    b.HasOne("Manning.Api.Models.Zone", null)
                        .WithMany("Stations")
                        .HasForeignKey("ZoneID");
                });

            modelBuilder.Entity("Manning.Api.Models.TrainingRequirement", b =>
                {
                    b.HasOne("Manning.Api.Models.Station", null)
                        .WithMany("TrainingRequirements")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manning.Api.Models.Station", b =>
                {
                    b.Navigation("TrainingRequirements");
                });

            modelBuilder.Entity("Manning.Api.Models.Zone", b =>
                {
                    b.Navigation("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
