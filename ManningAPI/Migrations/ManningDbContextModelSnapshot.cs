// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactManningPoCAPI.Repositories;

#nullable disable

namespace ReactManningPoCAPI.Migrations
{
    [DbContext(typeof(ManningDbContext))]
    partial class ManningDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReactManningPoCAPI.Models.Operator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ClockCardNumber")
                        .HasColumnType("int");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Operator", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.OperatorCompletedTraining", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("OperatorID")
                        .HasColumnType("int");

                    b.Property<int>("TrainerClockCardNumber")
                        .HasColumnType("int");

                    b.Property<int>("TrainingRequirementID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OperatorID");

                    b.HasIndex("TrainingRequirementID");

                    b.ToTable("OperatorCompletedTraining", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.OpStation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZoneID");

                    b.ToTable("OpStation", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.ShiftType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("ShiftType", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.TrainingRequirement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("OpStationID")
                        .HasColumnType("int");

                    b.Property<string>("RequirementDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrainingRequirementTypeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OpStationID");

                    b.HasIndex("TrainingRequirementTypeId");

                    b.ToTable("TrainingRequirement", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.TrainingRequirementType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TrainingRequirementsType", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.WorkingDayHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("OpStationID")
                        .HasColumnType("int");

                    b.Property<int>("OperatorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OpStationID");

                    b.HasIndex("OperatorID");

                    b.HasIndex("ShiftID");

                    b.ToTable("WorkdayHistory", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.Zone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Zone", (string)null);
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.OperatorCompletedTraining", b =>
                {
                    b.HasOne("ReactManningPoCAPI.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactManningPoCAPI.Models.TrainingRequirement", "TrainingRequirement")
                        .WithMany()
                        .HasForeignKey("TrainingRequirementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operator");

                    b.Navigation("TrainingRequirement");
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.OpStation", b =>
                {
                    b.HasOne("ReactManningPoCAPI.Models.Zone", null)
                        .WithMany("OpStations")
                        .HasForeignKey("ZoneID");
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.TrainingRequirement", b =>
                {
                    b.HasOne("ReactManningPoCAPI.Models.OpStation", "OpStation")
                        .WithMany("TrainingRequirements")
                        .HasForeignKey("OpStationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactManningPoCAPI.Models.TrainingRequirementType", "TrainingRequirementType")
                        .WithMany()
                        .HasForeignKey("TrainingRequirementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpStation");

                    b.Navigation("TrainingRequirementType");
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.WorkingDayHistory", b =>
                {
                    b.HasOne("ReactManningPoCAPI.Models.OpStation", "OpStation")
                        .WithMany()
                        .HasForeignKey("OpStationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactManningPoCAPI.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactManningPoCAPI.Models.ShiftType", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpStation");

                    b.Navigation("Operator");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.OpStation", b =>
                {
                    b.Navigation("TrainingRequirements");
                });

            modelBuilder.Entity("ReactManningPoCAPI.Models.Zone", b =>
                {
                    b.Navigation("OpStations");
                });
#pragma warning restore 612, 618
        }
    }
}
